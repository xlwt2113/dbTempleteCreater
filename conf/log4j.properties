# For JBoss: Avoid to setup Log4J outside $JBOSS_HOME/server/default/deploy/log4j.xml!
# For all other servers: Comment out the Log4J listener in web.xml to activate Log4J.
#	log4j中有五级logger 
#	FATAL 	0 
#	ERROR 	3 
#	WARN 	4 
#	INFO 	6 
#	DEBUG 	7 
#	%m   输出代码中指定的消息
#	%p   输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL 
#	%r   输出自应用启动到输出该log信息耗费的毫秒数 
#	%c   输出所属的类目，通常就是所在类的全名 
#	%t   输出产生该日志事件的线程名 
#	%n   输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” 
#	%d   输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss , SSS}，输出类似：2002年10月18日  22 ： 10 ： 28 ， 921  
#	%l   输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java: 10 )  
log4j.rootLogger=INFO , stdout,logfile
#, DataBase

log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m%n

log4j.appender.logfile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.logfile.File=../log/jdbcfront.log
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p [%c] - %m%n

